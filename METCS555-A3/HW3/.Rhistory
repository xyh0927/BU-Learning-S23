group_by(airline) %>%
summarize(total_seat_km = sum(avail_seat_km_per_week),
total_incidents = sum(incidents_85_99))
# Calculate incident rate for each airline
airline_data <- airline_data %>%
mutate(incident_rate = (total_incidents / total_seat_km) * 1e9)
# Sort by incident rate in descending order
airline_data <- airline_data %>%
arrange(desc(incident_rate))
# Display top 10 airlines by incident rate
head(airline_data, 10)
set.seed(123) # Set seed for reproducibility
sample_airline <- sample_n(airline_safety, size = 100)
set.seed(123) # Set seed for reproducibility
sample_airline <- sample_n(airline_safety, size = 30)
stratified_airline <- airline_safety %>%
select(country, fatalities_00_14) %>%
mutate(stratum = cut(fatalities_00_14, breaks = c(0, 10, 20, 30, 40, Inf),
labels = c("0-10", "11-20", "21-30", "31-40", ">40"))) %>%
group_by(stratum) %>%
stratify(size = 50)
##############################################################################
##############################################################################
library(tidyverse)
stratified_airline <- airline_safety %>%
select(country, fatalities_00_14) %>%
mutate(stratum = cut(fatalities_00_14, breaks = c(0, 10, 20, 30, 40, Inf),
labels = c("0-10", "11-20", "21-30", "31-40", ">40"))) %>%
group_by(stratum) %>%
stratify(size = 50)
install.packages("rsample")
stratified_airline <- airline_safety %>%
select(country, fatalities_00_14) %>%
mutate(stratum = cut(fatalities_00_14, breaks = c(0, 10, 20, 30, 40, Inf),
labels = c("0-10", "11-20", "21-30", "31-40", ">40"))) %>%
group_by(stratum) %>%
stratify(size = 50)
set.seed(123)
srs_sample <- airline_safety %>%
sample_n(size = 50)
# stratified sampling
strata <- airline_safety %>%
select(region) %>%
distinct()
sample_airline_safety <- airline_safety %>%
sample_n(size = 50, replace = FALSE)
# view the first few rows of the sample
head(sample_airline_safety)
library(rsample)
# stratify the dataset based on the region variable
strata_airline_safety <- airline_safety %>%
select(region, everything()) %>%
mutate(region = as.factor(region))
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
# perform stratified sampling on the dataset
strata_sample <- strata_airline_safety %>%
group_by(airline) %>%
rsample::rsample(size = 2, replace = FALSE) %>%
ungroup() %>%
select(-strata)
library(rsample)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
# perform stratified sampling on the dataset
strata_sample <- strata_airline_safety %>%
group_by(airline) %>%
rsample::rsample(size = 2, replace = FALSE) %>%
ungroup() %>%
select(-strata)
# load the required package
library(rsample)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
# perform stratified sampling on the dataset
strata_sample <- strata(strata_airline_safety, strata = "airline", size = 2, replace = FALSE)
install.packages("rsample")
# load the required package
library(rsample)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
install.packages("magrittr")
library(magrittr)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
library(dplyr)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
# perform stratified sampling on the dataset
strata_sample <- strata(strata_airline_safety, strata = "airline", size = 2, replace = FALSE)
library(rsample)
library(magrittr)
library(dplyr)
# stratify the dataset based on the airline variable
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
# perform stratified sampling on the dataset
strata_sample <- strata(strata_airline_safety, strata = "airline", size = 2, replace = FALSE)
#加载所需的包
library(dplyr)
library(rsample)
#导入数据
airline_safety <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/airline-safety/airline-safety.csv")
#对数据进行分层
strata_airline_safety <- airline_safety %>%
select(airline, everything()) %>%
mutate(airline = as.factor(airline))
#进行分层抽样
strata_sample <- strata(strata_airline_safety, strata = "airline", size = 2, replace = FALSE)
set.seed(123)
stratified_sample <- airline_safety %>%
group_by(incidents_85_99, incidents_00_14) %>%
sample_n(5) %>%
ungroup()
# Stratified Sampling
set.seed(123)
stratified_sample <- airline_safety %>%
group_by(incidents_85_99, incidents_00_14) %>%
slice(ifelse(n() >= 5, sample(1:n(), 5), 1:n())) %>%
ungroup()
stratified_sample
head(stratified_sample)
# Cluster Sampling
set.seed(123)
cluster_sample <- airline_safety %>%
group_by(region) %>%
sample_n(2) %>%
ungroup()
names(airline_safety)
set.seed(123)
cluster_sample <- airline_safety %>%
group_by(region) %>%
sample_n(2) %>%
ungroup()
set.seed(123)
cluster_sample <- airline_safety %>%
group_by(fatalities_00_14) %>%
sample_n(2) %>%
ungroup()
set.seed(123)
cluster_sample <- airline_safety %>%
group_by(fatalities_00_14) %>%
slice(ifelse(n() > 1, sample(1:n(), 1), 1:n())) %>%
ungroup()
head(cluster_sample)
# Simple random sample
set.seed(123)
simple_sample <- airline_safety[sample(nrow(airline_safety), 50), ]
set.seed(123)
simple_sample <- airline_safety[sample(nrow(airline_safety), 50), ]
head(simple_sample)
systematic_sample <- airline_safety[seq(1, nrow(airline_safety), 20), ]
head(systematic_sample)
library(dplyr)
library(plotly)
install.packages("plotly")
library(dplyr)
library(plotly)
str(airline_safety)
plot_ly(data = airline_safety, x = ~incidents_85_99, y = ~fatalities_85_99,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety", xaxis = list(title = "Incidents (1985-1999)"),
yaxis = list(title = "Fatalities (1985-1999)"), hovermode = "closest")
plot_ly(data = airline_safety, x = ~incidents_00_14, y = ~fatalities_00_14,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety", xaxis = list(title = "Incidents (2000-2014)"),
yaxis = list(title = "Fatalities (2000-2014)"), hovermode = "closest")
plot_ly(data = airline_safety, x = ~incidents_85_99, y = ~fatalities_85_99,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 1985-1999", xaxis = list(title = "Incidents (1985-1999)"),
yaxis = list(title = "Fatalities (1985-1999)"), hovermode = "closest")
plot_ly(data = airline_safety, x = ~incidents_00_14, y = ~fatalities_00_14,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 2000 -2014", xaxis = list(title = "Incidents (2000-2014)"),
yaxis = list(title = "Fatalities (2000-2014)"), hovermode = "closest")
knitr::opts_chunk$set(echo = TRUE)
airline_safety <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/airline-safety/airline-safety.csv")
par(mar=c(4, 4, 2, 2))
barplot(airline_safety$fatal_accidents_85_99,
names.arg = airline_safety$airline,
xlab = "Airline",
ylab = "Number of Fatal Accidents (1985-1999)",
main = "Fatal Accidents (1985-1999) by Airline",
col = "darkblue")
plot(airline_safety$avail_seat_km_per_week,
airline_safety$incidents_00_14,
xlab = "Available Seat Kilometers per Week",
ylab = "Number of Incidents (2000-2014)",
main = "Relationship between Available Seat Kilometers per Week and Incidents",
col = "blue")
knitr::opts_chunk$set(echo = TRUE)
airline_safety <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/airline-safety/airline-safety.csv")
par(mar=c(4, 4, 2, 2))
barplot(airline_safety$fatal_accidents_85_99,
names.arg = airline_safety$airline,
xlab = "Airline",
ylab = "Number of Fatal Accidents (1985-1999)",
main = "Fatal Accidents (1985-1999) by Airline",
col = "darkblue")
hist(airline_safety$fatalities_00_14,
breaks = 20,
xlab = "Number of Fatalities (2000-2014)",
ylab = "Frequency",
main = "Distribution of Fatalities (2000-2014)")
n <- 30
num_samples <- 1000
sample_means <- replicate(num_samples, mean(sample(airline_safety$fatalities_00_14, n)))
hist(sample_means,
breaks = 20,
xlab = "Sample Mean",
ylab = "Frequency",
main = "Distribution of Sample Means (n = 30)")
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
set.seed(123)
simple_sample <- airline_safety[sample(nrow(airline_safety), 50), ]
head(simple_sample)
systematic_sample <- airline_safety[seq(1, nrow(airline_safety), 20), ]
head(systematic_sample)
set.seed(123)
simple_sample <- airline_safety[sample(nrow(airline_safety), 50), ]
head(simple_sample)
systematic_sample <- airline_safety[seq(1, nrow(airline_safety), 20), ]
head(systematic_sample)
stratified_sample <- airline_safety %>%
group_by(incidents_85_99, incidents_00_14) %>%
slice(ifelse(n() >= 5, sample(1:n(), 5), 1:n())) %>%
ungroup()
head(stratified_sample)
cluster_sample <- airline_safety %>%
group_by(fatalities_00_14) %>%
slice(ifelse(n() > 1, sample(1:n(), 1), 1:n())) %>%
ungroup()
head(cluster_sample)
library(dplyr)
airline_data <- airline_safety %>%
group_by(airline) %>%
summarize(total_seat_km = sum(avail_seat_km_per_week),
total_incidents = sum(incidents_85_99))
airline_data <- airline_data %>%
mutate(incident_rate = (total_incidents / total_seat_km) * 1e9)
airline_data <- airline_data %>%
arrange(desc(incident_rate))
head(airline_data, 10)
str(airline_safety)
plot_ly(data = airline_safety, x = ~incidents_85_99, y = ~fatalities_85_99,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 1985-1999", xaxis = list(title = "Incidents (1985-1999)"),
yaxis = list(title = "Fatalities (1985-1999)"), hovermode = "closest")
plot_ly(data = airline_safety, x = ~incidents_00_14, y = ~fatalities_00_14,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 2000 -2014", xaxis = list(title = "Incidents (2000-2014)"),
yaxis = list(title = "Fatalities (2000-2014)"), hovermode = "closest")
knitr::opts_chunk$set(fig.width=8, fig.height=4,
echo=FALSE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(
echo = FALSE,
fig.height = 4,
fig.width = 8,
message = FALSE,
warning = FALSE
)
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Initialize a plot window
plot.new()
par(mar=c(4, 4, 2, 2)) # Set margin size
plot.new()
# Reduce the size of the plot margins
par(mar = c(4, 4, 2, 2))
# Initialize a plot window
plot.new()
# Reduce the size of the plot margins
par(mar = c(1, 1, 1, 1))
# Initialize a plot window
plot.new()
# Add a histogram of the data
hist(airline_safety$fatalities_00_14,
main = "Distribution of Fatalities (2000-2014)",
xlab = "Fatalities")
# Add a normal curve with the same mean and standard deviation
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Reset the plot margins to their default values
par(mar = c(5, 4, 4, 2) + 0.1)
par(mar = c(4, 4, 2, 2))
# Initialize a plot window
plot.new()
# Add a histogram of the data
hist(airline_safety$fatalities_00_14,
main = "Distribution of Fatalities (2000-2014)",
xlab = "Fatalities")
# Add a normal curve with the same mean and standard deviation
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Reset the plot margins to their default values
par(mar = c(5, 4, 4, 2) + 0.1)
# Reduce the size of the plot margins
par(mar = c(4, 4, 2, 2))
# Initialize a plot window
plot.new()
# Add a histogram of the data
hist(airline_safety$fatalities_00_14,
main = "Distribution of Fatalities (2000-2014)",
xlab = "Fatalities")
# Add a normal curve with the same mean and standard deviation
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Reset the plot margins to their default values
par(mar = c(5, 4, 4, 2) + 0.1)
knitr::opts_chunk$set(
echo = FALSE,
fig.height = 4,
fig.width = 8,
message = FALSE,
warning = FALSE
)
airline_safety <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/airline-safety/airline-safety.csv")
par(mar=c(4, 4, 2, 2))
barplot(airline_safety$fatal_accidents_85_99,
names.arg = airline_safety$airline,
xlab = "Airline",
ylab = "Number of Fatal Accidents (1985-1999)",
main = "Fatal Accidents (1985-1999) by Airline",
col = "darkblue")
plot(airline_safety$avail_seat_km_per_week,
airline_safety$incidents_00_14,
xlab = "Available Seat Kilometers per Week",
ylab = "Number of Incidents (2000-2014)",
main = "Relationship between Available Seat Kilometers per Week and Incidents",
col = "blue")
hist(airline_safety$fatalities_00_14,
breaks = 20,
xlab = "Number of Fatalities (2000-2014)",
ylab = "Frequency",
main = "Distribution of Fatalities (2000-2014)")
n <- 30
num_samples <- 1000
sample_means <- replicate(num_samples, mean(sample(airline_safety$fatalities_00_14, n)))
hist(sample_means,
breaks = 20,
xlab = "Sample Mean",
ylab = "Frequency",
main = "Distribution of Sample Means (n = 30)")
# Reduce the size of the plot margins
par(mar = c(4, 4, 2, 2))
# Initialize a plot window
plot.new()
# Add a histogram of the data
hist(airline_safety$fatalities_00_14,
main = "Distribution of Fatalities (2000-2014)",
xlab = "Fatalities")
# Add a normal curve with the same mean and standard deviation
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Reset the plot margins to their default values
par(mar = c(5, 4, 4, 2) + 0.1)
library(dplyr)
library(magrittr)
library(rsample)
library(plotly)
airline_safety <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/airline-safety/airline-safety.csv")
par(mar=c(4, 4, 2, 2)) # Set margin size
##############################################################################
##############################################################################
# Bar plot for fatal_accidents_85_99
barplot(airline_safety$fatal_accidents_85_99,
names.arg = airline_safety$airline,
xlab = "Airline",
ylab = "Number of Fatal Accidents (1985-1999)",
main = "Fatal Accidents (1985-1999) by Airline",
col = "darkblue")
##############################################################################
##############################################################################
# Scatter plot for avail_seat_km_per_week and incidents_00_14
plot(airline_safety$avail_seat_km_per_week,
airline_safety$incidents_00_14,
xlab = "Available Seat Kilometers per Week",
ylab = "Number of Incidents (2000-2014)",
main = "Relationship between Available Seat Kilometers per Week and Incidents",
col = "blue")
##############################################################################
##############################################################################
# Histogram of fatalities_00_14
hist(airline_safety$fatalities_00_14,
breaks = 20,
xlab = "Number of Fatalities (2000-2014)",
ylab = "Frequency",
main = "Distribution of Fatalities (2000-2014)")
##############################################################################
##############################################################################
# Draw 1000 random samples of size 30
n <- 30
num_samples <- 1000
sample_means <- replicate(num_samples, mean(sample(airline_safety$fatalities_00_14, n)))
# Plot the distribution of sample means
hist(sample_means,
breaks = 20,
xlab = "Sample Mean",
ylab = "Frequency",
main = "Distribution of Sample Means (n = 30)")
# Reduce the size of the plot margins
par(mar = c(4, 4, 2, 2))
# Initialize a plot window
plot.new()
# Add a histogram of the data
hist(airline_safety$fatalities_00_14,
main = "Distribution of Fatalities (2000-2014)",
xlab = "Fatalities")
# Add a normal curve with the same mean and standard deviation
mu <- mean(airline_safety$fatalities_00_14)
sd <- sd(airline_safety$fatalities_00_14)
curve(dnorm(x, mean = mu, sd = sd/sqrt(n)),
col = "red", add = TRUE)
# Reset the plot margins to their default values
par(mar = c(5, 4, 4, 2) + 0.1)
##############################################################################
##############################################################################
# Simple random sample
set.seed(123)
simple_sample <- airline_safety[sample(nrow(airline_safety), 50), ]
head(simple_sample)
# Systematic Sampling
systematic_sample <- airline_safety[seq(1, nrow(airline_safety), 20), ]
head(systematic_sample)
# Stratified Sampling
stratified_sample <- airline_safety %>%
group_by(incidents_85_99, incidents_00_14) %>%
slice(ifelse(n() >= 5, sample(1:n(), 5), 1:n())) %>%
ungroup()
head(stratified_sample)
# Cluster Sampling
cluster_sample <- airline_safety %>%
group_by(fatalities_00_14) %>%
slice(ifelse(n() > 1, sample(1:n(), 1), 1:n())) %>%
ungroup()
head(cluster_sample)
##############################################################################
##############################################################################
# Group by airline and calculate total available seat kilometers and incidents
airline_data <- airline_safety %>%
group_by(airline) %>%
summarize(total_seat_km = sum(avail_seat_km_per_week),
total_incidents = sum(incidents_85_99))
# Calculate incident rate for each airline
airline_data <- airline_data %>%
mutate(incident_rate = (total_incidents / total_seat_km) * 1e9)
# Sort by incident rate in descending order
airline_data <- airline_data %>%
arrange(desc(incident_rate))
# Display top 10 airlines by incident rate
head(airline_data, 10)
##############################################################################
##############################################################################
str(airline_safety)
plot_ly(data = airline_safety, x = ~incidents_85_99, y = ~fatalities_85_99,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 1985-1999", xaxis = list(title = "Incidents (1985-1999)"),
yaxis = list(title = "Fatalities (1985-1999)"), hovermode = "closest")
plot_ly(data = airline_safety, x = ~incidents_00_14, y = ~fatalities_00_14,
color = ~airline, type = "scatter", mode = "markers", hoverinfo = "text",
text = ~paste("Airline: ", airline, "<br>",
"Fatalities (1985-1999): ", fatalities_85_99, "<br>",
"Fatalities (2000-2014): ", fatalities_00_14)) %>%
layout(title = "Airline Safety 2000 -2014", xaxis = list(title = "Incidents (2000-2014)"),
yaxis = list(title = "Fatalities (2000-2014)"), hovermode = "closest")

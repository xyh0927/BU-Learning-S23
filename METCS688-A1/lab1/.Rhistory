geoMap <- read.csv("geoMap.csv", header = TRUE, stringsAsFactors = FALSE)
geoMap
geoMap <- read.csv("geoMap.csv", header = TRUE, stringsAsFactors = FALSE)
geoMap
geoMap[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` < 1, "gift for girlfriend: (2/14/13 - 2/14/18)"] <- 0
geoMap$gift.for.girlfriend[geoMap$gift.for.girlfriend < 1] <- 0
geoMap$gift.for.girlfriend[geoMap$gift.for.girlfriend < 1] <- 0
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` < 1] <- 0
print(geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` < 1] <- 0)
geoMap
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`
geoMap <- read.csv("geoMap.csv", header = TRUE, stringsAsFactors = FALSE)
geoMap
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` ="< 1"] <- 0
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` = '< 1'] <- 0
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)` = '< 1'] <- 0
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`< 1]
geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`[geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`== '<1']
num_states_GB_GT_GG <- sum(geoMap$gift.for.boyfriend > geoMap$gift.for.girlfriend)
num_states_GB_GT_GG
num_states_GB_GT_GG <- sum(geoMap$`gift for boyfriend: (2/14/13 - 2/14/18)` > geoMap$`gift for girlfriend: (2/14/13 - 2/14/18)`)
num_states_GB_GT_GG
data <- read.csv("geoMap.csv", header=TRUE)
data[data$gift.for.girlfriend....2.14.13...2.14.18. < 1, "gift.for.girlfriend....2.14.13...2.14.18."] <- 0
data
# Read the data from csv file
data <- read.csv("geoMap.csv", header=TRUE)
# Q1: Replace GG values smaller than 1 with 0
data$gift.for.girlfriend[data$gift.for.girlfriend < 1] <- 0
# Read the data from csv file
data <- read.csv("geoMap.csv", header=TRUE)
# Q1: Replace GG values smaller than 1 with 0
data$X.1[data$X.1 < 1] <- 0
data$X.1
# Read the data from the geoMap.csv file
geo_data <- read.csv("geoMap.csv", header = TRUE)
# Q1: Replace values smaller than 1 in GG with 0
geo_data$gift.for.girlfriend[geo_data$gift.for.girlfriend < 1] <- 0
geo_data
geo_data <- read.csv("geoMap.csv", header = TRUE,skip = 2)
geo_data
# Q1: Replace values smaller than 1 in GG with 0
geo_data$gift.for.girlfriend...2.14.13...2.14.18.[geo_data$gift.for.girlfriend...2.14.13...2.14.18. < 1] <- 0
geo_data$gift.for.girlfriend...2.14.13...2.14.18.
num_states_GB_GT_GG <- sum(geo_data$gift.for.boyfriend...2.14.13...2.14.18. > geo_data$gift.for.girlfriend...2.14.13...2.14.18.)
cat("Number of states where GB > GG:", num_states_GB_GT_GG, "\n")
# Q3: Find any states where GG+10 > GB
states_GG10_GT_GB <- geo_data$Region[geo_data$gift.for.girlfriend...2.14.13...2.14.18. + 10 > geo_data$gift.for.boyfriend...2.14.13...2.14.18.]
states_GG10_GT_GB <- geo_data$Region[(geo_data$gift.for.girlfriend...2.14.13...2.14.18. )+ 10 > (geo_data$gift.for.boyfriend...2.14.13...2.14.18.)]
states_GG10_GT_GB <- geo_data$Region[as.numeric(geo_data$gift.for.girlfriend...2.14.13...2.14.18. )+ 10 > as.numeric(geo_data$gift.for.boyfriend...2.14.13...2.14.18.)]
if (length(states_GG10_GT_GB) > 0) {
cat("States where GG+10 > GB:", paste(states_GG10_GT_GB, collapse = ", "), "\n")
} else {
cat("No states where GG+10 > GB\n")
}
# Q4: Calculate the percentage of states where GG+10 > GB
percent_states_GG10_GT_GB <- 100 * length(states_GG10_GT_GB) / nrow(geo_data)
cat("Percentage of states where GG+10 > GB:", percent_states_GG10_GT_GB, "%\n")
ratio_NH_GG_GB <- geo_data$gift.for.girlfriend[geo_data$Region == "New Hampshire"] / geo_data$gift.for.boyfriend[geo_data$Region == "New Hampshire"]
ratio_NH_GG_GB <- as.numeric(geo_data$gift.for.girlfriend[geo_data$Region == "New Hampshire"]) / as.numeric(geo_data$gift.for.boyfriend[geo_data$Region == "New Hampshire"])
cat("Ratio GG/GB for New Hampshire:", ratio_NH_GG_GB, "\n")
# Q6: Create a bar plot of GG and GB for each state
barplot(t(as.matrix(geo_data[, 2:3])), beside = TRUE, names.arg = geo_data$Region, legend.text = c("GB", "GG"), ylab = "Google Trends Interest", xlab = "State")
# Q6: Create a bar plot of GG and GB for each state
barplot(as.matrix(geo_data[, 2:3]), beside = TRUE, col = c("#ffccff", "#99ccff"),
main = "Interest in Gift for Boyfriend vs Girlfriend by State",
xlab = "State", ylab = "Interest", ylim = c(0, 110))
# Q6: Create a bar plot of GG and GB for each state
barplot(as.numeric(t(as.matrix(geo_data[, 2:3]))), beside = TRUE, names.arg = geo_data$Region, legend.text = c("GB", "GG"), ylab = "Google Trends Interest", xlab = "State")
barplot(as.numeric(as.matrix(geo_data[, 2:3])), beside = TRUE, col = c("red", "blue"),
main = "Interest in Gift for Boyfriend vs Girlfriend by State",
xlab = "State", ylab = "Interest", ylim = c(0, 110))
legend("topright", c("Gift for Girlfriend", "Gift for Boyfriend"), fill = c("red", "blue"),
cex = 0.8, inset = 0.05)
text(x = barplot(as.numeric(as.matrix(geo_data[, 2:3])), beside = TRUE, col = c("red", "blue")),
y = as.numeric(as.matrix(geo_data[, 2:3])) + 5, labels = round(as.numeric(as.matrix(geo_data[, 2:3])), 1), pos = 3, cex = 0.8)
barplot(as.numeric(as.matrix(geo_data[, 2:3])), beside = TRUE, col = c("red", "blue"),
main = "Interest in Gift for Boyfriend vs Girlfriend by State",
xlab = "State", ylab = "Interest", ylim = c(0, 110))
legend("topright", c("Gift for Girlfriend", "Gift for Boyfriend"), fill = c("red", "blue"),
cex = 0.8, inset = 0.05)
